{"name":"Location Tracker","tagline":"Track Android Location Easily","body":"# LocationTracker\r\n\r\nTo Track Location in android, So many things we have to consider. Like Google Play service, Location Permission, Android Pie & Q changes, Network Location, Fused Location & GPS location. But now onwards no need to worry about these. Without writing boilerplate code, Easily we can fetch location. To Fetch Location LocationTracker is giving a better solution to take advantage. It Helps in Handling So many things like Network Settings, GPS settings and so on.\r\n\r\nFeature\r\n-----------------\r\n* Location-Based on Network\r\n* Location-Based on GPS\r\n* Location-Based on Google Fused Location Client\r\n* Movement Speed Based on Previous Location & Distance Calculation Based on Previous Location (Harversine Algorithm used)\r\n* Automatic check on Play Service, Network & GPS\r\n* At the same time, you can start Network & GPS & Fused Location Updates.\r\n* Runtime Permission\r\n* Quick Location Updates & We can use in both Java & Kotlin & Easy To integrate.\r\n\r\nImplementation \r\n-----------------\r\nTo Implement This library, watch [YouTube](https://youtu.be/b7Hlo-MauXs) video. It Will help you more in-depth. To Implement We have to follow some steps. Steps are followingâ€¦!\r\n\r\n\r\n\r\n## Step 1: Add Maven Jitpack URL in project Gradle\r\n        all projects {\r\n          repositories {\r\n            // ...\r\n            maven { url 'https://jitpack.io' }\r\n\r\n          }\r\n        }\r\n        \r\n## Step 2: Add Library Dependency in App Gradle\r\n\r\n        implementation \"com.github.SelfHitler:LocationTracker:V1.0.0\"\r\n\r\n## Step 3: Declare Location Tracker Variable\r\n\r\n     With this variable, you can access network state of your device. And you can check GPS settings & Play Service Library also you can test. This one you can implement as an interface also in your project.\r\n\r\n###   Kotlin\r\n\r\n    val locationTracker = object: LocationTracker(context){\r\n\r\n                override fun onLocationChanged(\r\n                    networkLocation: Location?,\r\n                    networkLocationSpeed: Double,\r\n                    locationUpdate: LocationUpdate\r\n                ) {\r\n                    Log.e(\"${locationUpdate.name}\", networkLocation?.latitude.toString())\r\n                }\r\n\r\n                override fun onFailure(errorMessage: ErrorMessage) {\r\n                    Log.e(\"ERROR\",errorMessage.name)\r\n                }\r\n\r\n                override fun onSuccess(successMessage: SuccessMessage) {\r\n                    Log.e(\"SUCCESS\",successMessage.name)\r\n                }\r\n\r\n            }\r\n            \r\n \r\n## Java\r\n \r\n     LocationTracker locationTracker = new LocationTracker(context) {\r\n        @Override\r\n        protected void onSuccess(@NotNull SuccessMessage successMessage) {\r\n\r\n        }\r\n\r\n        @Override\r\n        protected void onFailure(@NotNull ErrorMessage errorMessage) {\r\n\r\n        }\r\n\r\n        @Override\r\n        protected void onLocationChanged(@Nullable Location networkLocation, double networkLocationSpeed, @NotNull LocationUpdate locationUpdate) {\r\n            \r\n        }\r\n    };\r\n\r\n## Step 4: Check Runtime Permission\r\nTo check Runtime permission also Location Tracker is giving inbuilt functionalities. Not only for Location. You can Ask Runtime Permission for any permissions. Android Q Permission Changes also there in it.\r\n\r\n### Kotlin \r\n      val permissionCheck = PermissionCheck(context)\r\n      permissionCheck.checkPermission(permissionCheck.LOCATION_PERMISSIONS)\r\n      \r\n### Java\r\n      PermissionCheck permissionCheck = PermissionCheck(context);\r\n      permissionCheck.checkPermission(permissionCheck.LOCATION_PERMISSIONS);\r\n\r\n> To check Camera & Storage Permission `permissionCheck.STORAGE_AND_CAMERA_PERMISSIONS`\r\n\r\n> Only For Storage `PermissionCheck.STORAGE_PERMISSIONS` \r\n\r\n> Only For Camera  `PermissionCheck.CAMERA_PERMISSIONS`\r\n\r\n> Particularly To Ask Storage Permission, in Android Q and above you have to add below lines in the manifest file\r\n      \r\n          <application\r\n               android:requestLegacyExternalStorage=\"true\"\r\n               ....>\r\n               ...\r\n          </application>     \r\n      \r\n\r\n## STEP 5: Start Location Update\r\n\r\n### To get GPS location updates    \r\n   \r\n        startLocationTracker(LocationUpdate.GPS)\r\n\r\n### To get NETWORK location updates\r\n   \r\n        startLocationTracker(LocationUpdate.NETWORK)\r\n\r\n### To get Google Fused location updates\r\n   \r\n        startLocationTracker(LocationUpdate.FUSED_LOCATION)\r\n   \r\n### To get All Location Updates\r\n   \r\n        startLocationTracker(LocationUpdate.ALL)\r\n   \r\n   \r\n## STEP 6: Stop Location Update\r\n    \r\n    locationTracker.stopLocationTracker(LocationUpdate.ALL)\r\n    \r\n    To stop specified update, use `LocationUpdate.GPS , LocationUpdate.NETWORK , LocationUpdate.FUSED_LOCATION`\r\n\r\n## STEP 7: Other Feature\r\n> To Find Distance between two location \r\n    \r\n           HaversineAlgorithm().HaversineInM( lat1: Double, long1: Double,  lat2: Double, long2: Double)\r\n    \r\n           HaversineAlgorithm().HaversineInKM( lat1: Double, long1: Double,  lat2: Double, long2: Double)\r\n\r\n***\r\n\r\n    \r\n### NOTE:\r\n1. onDestroy make sure location update stoped or not. If you want to run in the background continuously then check the demo app.\r\n                      \r\n## Author\r\n\r\nðŸ‘¤ **Yabaze**\r\n\r\n- FaceBook: [@MirakleYabaze](https://www.facebook.com/mirakle.yabaze)\r\n- twitter: [@MirakleYabaze](https://twitter.com/mirakleyabaze)\r\n- instagram: [@Yabaze1](https://www.instagram.com/yabaze1/)\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}